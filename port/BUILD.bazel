package(default_visibility = ["//:__subpackages__"])

load("@rules_cc//cc:defs.bzl", "cc_library")
load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template_rule")

expand_template_rule(
    # A unique name for this target.
    name = "cpl_config_generate",
    # The template file to expand.
    out = "cpl_config.h",
    substitutions = {
        "cmakedefine": "define",
        "@GDAL_PREFIX@": "/usr/local",
        "@SIZEOF_INT@": "4",  # gdal is hardcoded to accept this value ðŸ¤·
        "@SIZEOF_UNSIGNED_LONG@": "8",
        "@SIZEOF_VOIDP@": "8",
        "@SIZEOF_SIZE_T@": "8",
        "@SIZEOF_LONG_INT@": "8",
        "@VSI_STAT64_T@": "stat64",
        "@VSI_STAT64@": "stat64",
        "@ICONV_CPP_CONST@": "",
        "@VSI_FOPEN64@": "fopen",
        "@VSI_FTRUNCATE64@": "ftruncate",
        "@VSI_FSEEK64@": "fseek",
        "@VSI_FTELL64@": "ftell",
        "@HAVE_GCC_WARNING_ZERO_AS_NULL_POINTER_CONSTANT@": "1",
        "@CPL_CONFIG_EXTRAS@": "",
        "HAVE_DIRECT_H 1": "_HAVE_DIRECT_H 0",
        "HAVE_XLOCALE_H 1": "_HAVE_XLOCALE_H 0",
    },
    template = "//cmake/template:cpl_config_template",
)

filegroup(
    name = "headers",
    srcs = glob(
        [
            "*.h",
            "*.hpp",
        ],
        exclude = ["cpl_odbc.h"],
    ) + [
        ":cpl_config_generate",
    ],
)

filegroup(
    name = "port",
    srcs = glob(
        ["*.cpp"],
        exclude = [
            "*win32.cpp",
            "cpl_odbc.cpp",
            #            "cpl_vsil_gzip.cpp",
            #            "cpl_minizip_ioapi.cpp",
            #            "cpl_minizip_unzip.cpp",
            #            "cpl_minizip_zip.cpp",
        ],
    ),
)
